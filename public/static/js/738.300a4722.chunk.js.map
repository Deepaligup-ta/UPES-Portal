{"version":3,"file":"static/js/738.300a4722.chunk.js","mappings":"mLAwBA,IArBiB,SAACA,GACd,OACGC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACCF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,KAAM,EAAGC,MAAO,CAAEC,OAAQ,QAAQJ,UACnCF,EAAAA,EAAAA,KAACO,EAAAA,EAAMC,OAAM,CAACC,KAAM,OAAAC,OAAOX,EAAMY,KAAKC,OAAOC,UAAS,OAAMC,OAAOf,EAAMY,KAAKI,UAAUC,MAAM,KAAK,IAAId,UACnGe,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACb,MAAO,CAAEC,OAAQ,QAASa,WAAS,EAAAjB,SAAA,EACrCF,EAAAA,EAAAA,KAACoB,EAAAA,EAAWC,MAAK,CAAChB,MAAO,CAAEiB,SAAU,OAAQC,UAAW,QAAQrB,SAC3DH,EAAMY,KAAKa,SAEhBxB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACoB,EAAAA,EAAWK,KAAI,CAACpB,MAAO,CAAEiB,SAAU,QAAQpB,SACtCH,EAAMY,KAAKe,kBAQzC,C,2OChBQC,EAAmCC,EAAAA,EAAnCD,OAAQE,EAA2BD,EAAAA,EAA3BC,QAASC,EAAkBF,EAAAA,EAAlBE,OAAQC,EAAUH,EAAAA,EAAVG,MA8LjC,IA7LuB,SAAChC,GACtB,IAAMiC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,OAAGC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eACnCC,EAAS,KAED,gBADNC,EAAAA,EAAAA,MAAeC,KAClBC,KACCC,OAAOZ,SAASa,KAAO,SADhC,CAIF,GAAG,CAACJ,EAAAA,KACJ,IAAAK,GAAwBC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdR,GAAWY,EAAAA,EAAAA,MAUNC,EACPC,EAAAA,EAAMC,WADRC,MAASH,iBASLI,EAAW,CACf,CACEC,IAAK,wBACLC,KAAMC,EAAAA,cAAoBC,EAAAA,GAC1BC,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,wBAAuB9D,SAAC,eAE3C,CACEwD,IAAK,wBACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,wBAAuB9D,SAAC,eAE3C,CACEwD,IAAK,sBACLC,KAAMC,EAAAA,cAAoBM,EAAAA,GAC1BJ,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,sBAAqB9D,SAAC,aAEzC,CACEwD,IAAK,eACLC,KAAMC,EAAAA,cAAoBO,EAAAA,GAC1BL,MAAM,gBACN5D,SAAU,CACR,CACEwD,IAAK,+BACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,+BAA8B9D,SAAC,SAElD,CACEwD,IAAK,gCACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,gCAA+B9D,SAAC,YAIvD,CACEwD,IAAK,qBACLC,KAAMC,EAAAA,cAAoBM,EAAAA,GAC1BJ,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,qBAAoB9D,SAAC,aAExC,CACEwD,IAAK,sBACLC,KAAMC,EAAAA,cAAoBM,EAAAA,GAC1BJ,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,sBAAqB9D,SAAC,aAEzC,CACEwD,IAAK,UACLC,KAAMC,EAAAA,cAAoBQ,EAAAA,GAC1BN,MAAM,UACN5D,SAAU,CACR,CACEwD,IAAK,0BACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,0BAAyB9D,SAAC,SAE7C,CACEwD,IAAK,2BACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,2BAA0B9D,SAAC,YAIlD,CACEwD,IAAK,OACLC,KAAMC,EAAAA,cAAoBQ,EAAAA,GAC1BN,MAAM,OACN5D,SAAU,CACR,CACEwD,IAAK,uBACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,uBAAsB9D,SAAC,SAE1C,CACEwD,IAAK,wBACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,wBAAuB9D,SAAC,YAI/C,CACEwD,IAAK,SACLC,KAAMC,EAAAA,cAAoBS,EAAAA,GAC1BP,MAAM,SACN5D,SAAU,CACR,CACEwD,IAAK,yBACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,yBAAwB9D,SAAC,SAE5C,CACEwD,IAAK,0BACLC,KAAMC,EAAAA,cAAoBK,EAAAA,GAC1BH,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACC,GAAG,0BAAyB9D,SAAC,YAIjD,CACEwD,IAAK,SACLC,KAAMC,EAAAA,cAAoBU,EAAAA,GAC1BR,OAAQ9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAI,CAACQ,QAxGH,YACbC,EAAAA,EAAAA,MACGC,MAAK,SAAC9D,GACL,GAAGA,EAAK+D,SACN,OAAOlC,EAAS,gBACpB,GACJ,EAkGkCtC,SAAC,aAInC,OACEe,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CAAA1B,SAAA,EACLe,EAAAA,EAAAA,MAACc,EAAK,CACJ4C,WAAW,KACXrB,MAAQJ,EAAO,OAAQ,QACvB0B,eAAe,IACfvE,MAAO,CAAEC,OAAQ,SAASJ,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,OAAK6E,UAAU,qBAAoB3E,UACjCF,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CAACC,IAAI,qBAEb/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,CACH1B,MAAQJ,EAAO,OAAQ,QACvB+B,KAAK,SACLC,oBAAqBlD,EAASmD,SAC9BC,gBAAiB,GACjBC,MAAO5B,QAGXxC,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CAAA1B,SAAA,EACLF,EAAAA,EAAAA,KAAC2B,EAAM,CACLtB,MAAO,CACLiF,QAAS,EACTC,WAAYlC,GACZnD,UAEFF,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CAACC,KAAK,QAAQpF,MAAO,CAAEqF,MAAO,QAASC,OAAQ,QAAShC,MAAM3D,EAAAA,EAAAA,KAACkE,EAAAA,EAAY,SAEpFlE,EAAAA,EAAAA,KAAC6B,EAAO,CACNxB,MAAO,CACLsF,OAAQ,cACRJ,WAAYlC,GACZnD,UAEFF,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLiF,QAAS,GACTM,UAAW,KACX1F,SAEAH,EAAMG,cAGZF,EAAAA,EAAAA,KAAC8B,EAAM,CACLzB,MAAO,CACLkB,UAAW,UAEXrB,SACH,yCAIHF,EAAAA,EAAAA,KAAC6F,EAAAA,EAAW,CAAClC,KAAOT,GAAOlD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,KAAM9F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAY,IAAMxB,QAAS,WAxKxEpB,GADCD,EAyKmF,MAG1F,C,+KChMM8C,EAAMC,EAAAA,GAECC,EAAU,SAACC,GACpB,OAAOC,MAAM,GAAD1F,OAAIsF,EAAG,QAAQ,CACvBK,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAD3F,QAAY4F,EAAAA,EAAAA,MAAW,KAExCC,YAAa,UACbC,OAAQ,OACRL,KAAMhE,KAAKsE,UAAUN,KAEpB1B,MAAK,SAACiC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,GAEtC,EAEaG,EAAW,SAACX,GAErB,OAAOC,MAAM,GAAD1F,OAAIsF,EAAG,WAAW,CAC1BK,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAD3F,QAAY4F,EAAAA,EAAAA,MAAW,KAExCC,YAAa,UACbC,OAAQ,MACRL,KAAMhE,KAAKsE,UAAUN,KAEpB1B,MAAK,SAACiC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,GAEtC,EAEaI,EAAa,SAACZ,GACvB,OAAOC,MAAM,GAAD1F,OAAIsF,EAAG,WAAW,CAC1BK,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAD3F,QAAY4F,EAAAA,EAAAA,MAAW,KAExCC,YAAa,UACbC,OAAQ,SACRL,KAAMhE,KAAKsE,UAAUN,KAEpB1B,MAAK,SAACiC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,GAEtC,EAEaK,EAAU,SAACC,GACpB,OAAOb,MAAM,GAAD1F,OAAIsF,EAAG,UAAAtF,OAASuG,EAAOC,QAAU,CACzCb,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAD3F,QAAY4F,EAAAA,EAAAA,MAAW,KAExCC,YAAa,UACbC,OAAQ,QAEP/B,MAAK,SAACiC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,GAEtC,EAEaQ,EAAW,SAACC,GAErB,OAAOhB,MAAM,GAAD1F,OAAIsF,EAAG,cAAAtF,OAAa0G,GAAQ,CACpCf,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAD3F,QAAY4F,EAAAA,EAAAA,MAAW,KAExCC,YAAa,UACbC,OAAQ,QAEP/B,MAAK,SAACiC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,GAEtC,C,+GCjDA,UA1B6B,WACzB,IAAA7D,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BnC,EAAIqC,EAAA,GAAEqE,EAAOrE,EAAA,GACpBsE,GAA8BvE,EAAAA,EAAAA,WAAS,GAAKwE,GAAAtE,EAAAA,EAAAA,GAAAqE,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClBG,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfAxF,EAAAA,EAAAA,YAAU,WACN0F,SAASpG,MAAQ,wBACjBwF,EAAAA,EAAAA,IAAQ,CAAEE,OAAQQ,IACbjD,MAAK,SAACiC,GACH,GAAGA,EAAIG,MACH,OAAOjE,OAAOZ,SAASa,KAAO,gCAClCwE,EAAQX,GACRe,GAAW,EACf,IACCb,OAAM,SAACC,GACJ,OAAOjE,OAAOZ,SAASa,KAAO,+BAClC,GACR,GAAG,CAACwE,KAIArH,EAAAA,EAAAA,KAAC6H,EAAAA,EAAc,CAAA3H,SACTsH,GAAUxH,EAAAA,EAAAA,KAAC8H,EAAAA,EAAQ,CAACC,QAAM,KAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CAACrH,KAAMA,KAG9D,C","sources":["Components/Basic/FullPost.js","Components/Management/Base.js","Helper/Post/index.js","Pages/Management/SinglePost.js"],"sourcesContent":["import React from \"react\"\r\nimport { Col, Card, Row, Typography, Badge } from 'antd'\r\n\r\nconst FullPost = (props) => {\r\n    return(\r\n       <Row>\r\n            <Col flex={3} style={{ height: '70vh'}}>\r\n                <Badge.Ribbon text={`By: ${props.data.author.firstName} | `+String(props.data.createdAt.split('T')[0])}>\r\n                    <Card style={{ height: '70vh'}} hoverable>\r\n                        <Typography.Title style={{ fontSize: '30px', textAlign: 'left'}}>\r\n                            {props.data.title}\r\n                        </Typography.Title>\r\n                        <hr/>\r\n                        <Typography.Text style={{ fontSize: '16px'}}>\r\n                            { props.data.content }\r\n                        </Typography.Text> \r\n                    </Card>\r\n                </Badge.Ribbon>\r\n            </Col>\r\n            \r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default FullPost","import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, LogoutOutlined, DashboardOutlined, FieldTimeOutlined ,NotificationOutlined, MessageOutlined, FileTextOutlined, BulbOutlined, BulbFilled } from '@ant-design/icons'\r\nimport { Layout, Menu, theme, FloatButton, Avatar, Image } from 'antd'\r\nimport { getAuthToken, signout } from '../../Helper/Authentication'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout\r\nconst ManagementBase = (props) => {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if(JSON.parse(localStorage.getItem('user')).changePassword)\r\n      return navigate('/')\r\n    let user = getAuthToken().user\r\n    if(user.role !== \"management\"){\r\n      return window.location.href = \"/\" \r\n    }\r\n   \r\n  }, [getAuthToken])\r\n  const [dark, setDark] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  const mode = () => {\r\n    if(dark)\r\n      setDark(false)\r\n    else  \r\n      setDark(true)\r\n  }\r\n\r\n  const {\r\n    token: { colorBgContainer },\r\n  } = theme.useToken()\r\n  const logout = () => {\r\n    signout()\r\n      .then((data) => {\r\n        if(data.redirect)\r\n          return navigate('/?logout=true')\r\n      })\r\n  }\r\n  const menuItem = [\r\n    {\r\n      key: \"/management/dashboard\",\r\n      icon: React.createElement(DashboardOutlined),\r\n      label: (<Link to=\"/management/dashboard\">Dashboard</Link>),\r\n    },\r\n    {\r\n      key: \"/management/timetable\",\r\n      icon: React.createElement(FieldTimeOutlined),\r\n      label: (<Link to=\"/management/timetable\">Timetable</Link>),\r\n    },\r\n    {\r\n      key: \"/management/faculty\",\r\n      icon: React.createElement(UserOutlined),\r\n      label: (<Link to=\"/management/faculty\">Faculty</Link>),\r\n    },\r\n    {\r\n      key: \"announcement\",\r\n      icon: React.createElement(NotificationOutlined),\r\n      label: `Announcements`,\r\n      children: [\r\n        {\r\n          key: \"/management/announcement/new\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/announcement/new\">New</Link>),\r\n        },\r\n        {\r\n          key: \"/management/announcement/view\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/announcement/view\">View</Link>),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: \"/management/course\",\r\n      icon: React.createElement(UserOutlined),\r\n      label: (<Link to=\"/management/course\">Courses</Link>),\r\n    },\r\n    {\r\n      key: \"/management/profile\",\r\n      icon: React.createElement(UserOutlined),\r\n      label: (<Link to=\"/management/profile\">Profile</Link>),\r\n    },\r\n    {\r\n      key: \"message\",\r\n      icon: React.createElement(MessageOutlined),\r\n      label: `Message`,\r\n      children: [\r\n        {\r\n          key: \"/management/message/new\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/message/new\">New</Link>),\r\n        },\r\n        {\r\n          key: \"/management/message/view\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/message/view\">View</Link>),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: \"post\",\r\n      icon: React.createElement(MessageOutlined),\r\n      label: `Post`,\r\n      children: [\r\n        {\r\n          key: \"/management/post/new\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/post/new\">New</Link>),\r\n        },\r\n        {\r\n          key: \"/management/post/view\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/post/view\">View</Link>),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: \"policy\",\r\n      icon: React.createElement(FileTextOutlined),\r\n      label: `Policy`,\r\n      children: [\r\n        {\r\n          key: \"/management/policy/new\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/policy/new\">New</Link>),\r\n        },\r\n        {\r\n          key: \"/management/policy/view\",\r\n          icon: React.createElement(FieldTimeOutlined),\r\n          label: (<Link to=\"/management/policy/view\">View</Link>),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: \"Logout\",\r\n      icon: React.createElement(LogoutOutlined),\r\n      label: (<Link onClick={logout}>Logout</Link>),\r\n    },\r\n  \r\n    ]\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        theme={(dark ? \"dark\": \"light\")}\r\n        collapsedWidth=\"0\"\r\n        style={{ height: '100vh'}}\r\n      >\r\n        <div className=\"demo-logo-vertical\">\r\n          <Image src='/upesfull.png'/>\r\n        </div>\r\n        <Menu\r\n          theme={(dark ? \"dark\": \"light\")}\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={location.pathname}\r\n          defaultOpenKeys={[]}\r\n          items={menuItem}\r\n        />\r\n      </Sider>\r\n      <Layout>\r\n        <Header\r\n          style={{\r\n            padding: 0,\r\n            background: colorBgContainer,\r\n          }}\r\n        >\r\n          <Avatar size=\"large\" style={{ float: 'right', margin: '10px'}} icon={<UserOutlined />} />\r\n        </Header>\r\n        <Content\r\n          style={{\r\n            margin: '24px 16px 0',\r\n            background: colorBgContainer,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              padding: 24,\r\n              minHeight: 360,\r\n            }}\r\n          >\r\n            { props.children }\r\n          </div>\r\n        </Content>\r\n        <Footer\r\n          style={{\r\n            textAlign: 'center',\r\n\r\n          }}\r\n        >\r\n          Made By Students During Nighouts\r\n        </Footer>\r\n      </Layout>\r\n      <FloatButton icon={(dark ? <BulbFilled /> : <BulbOutlined />)} onClick={() => mode()} />\r\n    </Layout>\r\n  )\r\n}\r\nexport default ManagementBase","import config from '../../config.json'\r\nimport { getToken } from '../Authentication/index'\r\n\r\nconst URL = config.post\r\n\r\nexport const newPost = (body) => {\r\n    return fetch(`${URL}/new`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"POST\",  \r\n        body: JSON.stringify(body),\r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const editPost = (body) => { // body = { annoucement structure }\r\n\r\n    return fetch(`${URL}/update`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"PUT\",  \r\n        body: JSON.stringify(body),\r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const deletePost = (body) => { /// body = { announcementId: \"ID\" }\r\n    return fetch(`${URL}/delete`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"DELETE\",  \r\n        body: JSON.stringify(body),\r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const getPost = (params) => {\r\n    return fetch(`${URL}/post/${params.postId}`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"GET\",  \r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const getPosts = (page) => {\r\n    \r\n    return fetch(`${URL}/all?page=${page}`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"GET\",  \r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Skeleton } from \"antd\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getPost } from \"../../Helper/Post\"\r\nimport FullPost from \"../../Components/Basic/FullPost\"\r\nimport ManagementBase from \"../../Components/Management/Base\"\r\n\r\n\r\nconst SinglePostManagement = () => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        document.title = \"View Message | SoCIS\"\r\n        getPost({ postId: id })\r\n            .then((res) => {\r\n                if(res.error) \r\n                    return window.location.href = '/faculty/post/view?error=true'\r\n                setData(res)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                return window.location.href = '/faculty/post/view?error=true'\r\n            })\r\n    }, [setData ])\r\n   \r\n    \r\n    return(\r\n        <ManagementBase>\r\n            { loading ? <Skeleton active /> : <FullPost data={data} /> }\r\n        </ManagementBase>\r\n    )\r\n}\r\n\r\nexport default SinglePostManagement"],"names":["props","_jsx","Row","children","Col","flex","style","height","Badge","Ribbon","text","concat","data","author","firstName","String","createdAt","split","_jsxs","Card","hoverable","Typography","Title","fontSize","textAlign","title","Text","content","Header","Layout","Content","Footer","Sider","location","useLocation","useEffect","JSON","parse","localStorage","getItem","changePassword","navigate","getAuthToken","user","role","window","href","_useState","useState","_useState2","_slicedToArray","dark","setDark","useNavigate","colorBgContainer","theme","useToken","token","menuItem","key","icon","React","DashboardOutlined","label","Link","to","FieldTimeOutlined","UserOutlined","NotificationOutlined","MessageOutlined","FileTextOutlined","LogoutOutlined","onClick","signout","then","redirect","breakpoint","collapsedWidth","className","Image","src","Menu","mode","defaultSelectedKeys","pathname","defaultOpenKeys","items","padding","background","Avatar","size","float","margin","minHeight","FloatButton","BulbFilled","BulbOutlined","URL","config","newPost","body","fetch","headers","getToken","credentials","method","stringify","res","json","catch","error","editPost","deletePost","getPost","params","postId","getPosts","page","setData","_useState3","_useState4","loading","setLoading","id","useParams","document","ManagementBase","Skeleton","active","FullPost"],"sourceRoot":""}