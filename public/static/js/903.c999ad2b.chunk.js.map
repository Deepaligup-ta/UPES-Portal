{"version":3,"file":"static/js/903.c999ad2b.chunk.js","mappings":"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","sources":["Components/Basic/PageTitle.js","../node_modules/@ant-design/icons-svg/es/asn/MessageOutlined.js","../node_modules/@ant-design/icons/es/icons/MessageOutlined.js","Components/Management/Base.js","Helper/Evaluate/index.js","Pages/Management/Evaluate.js"],"sourcesContent":["import { Typography } from \"antd\"\r\nimport React from \"react\"\r\n\r\n\r\nconst PageTitle = (props) => {\r\n    return(\r\n        <Typography.Title style={{ fontSize: '24px'}}>\r\n            {props.title}\r\n        </Typography.Title>\r\n    )\r\n}\r\n\r\nexport default PageTitle","// This icon file is generated automatically.\nvar MessageOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" } }] }, \"name\": \"message\", \"theme\": \"outlined\" };\nexport default MessageOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport MessageOutlinedSvg from \"@ant-design/icons-svg/es/asn/MessageOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar MessageOutlined = function MessageOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: MessageOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  MessageOutlined.displayName = 'MessageOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(MessageOutlined);","import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, IdcardOutlined, ScheduleOutlined, AppstoreOutlined, PlusOutlined, FolderViewOutlined, LogoutOutlined, DashboardOutlined, OrderedListOutlined ,NotificationOutlined, MessageOutlined, FileTextOutlined, BulbOutlined, BulbFilled } from '@ant-design/icons'\r\nimport { Layout, Menu, ConfigProvider, Avatar, Image, Dropdown } from 'antd'\r\nimport { getAuthToken, signout } from '../../Helper/Authentication'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout\r\nconst ManagementBase = (props) => {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    let user = getAuthToken().user\r\n    if(user.role !== \"management\"){\r\n      return window.location.href = \"/\" \r\n    }\r\n   \r\n  }, [getAuthToken])\r\n  const [dark, setDark] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  const mode = () => {\r\n    if(dark)\r\n      setDark(false)\r\n    else  \r\n      setDark(true)\r\n  }\r\n  const logout = () => {\r\n    signout()\r\n      .then((data) => {\r\n        if(data.redirect)\r\n          return navigate('/?logout=true')\r\n      })\r\n  }\r\n  const menuItem = [\r\n    {\r\n      key: \"/management/dashboard\",\r\n      icon: React.createElement(DashboardOutlined),\r\n      label: (<Link to=\"/management/dashboard\">Dashboard</Link>),\r\n    },\r\n    {\r\n      key: \"/management/timetable\",\r\n      icon: React.createElement(ScheduleOutlined),\r\n      label: (<Link to=\"/management/timetable\">Timetable</Link>),\r\n    },\r\n    {\r\n      key: \"/management/faculty\",\r\n      icon: React.createElement(UserOutlined),\r\n      label: (<Link to=\"/management/faculty\">Faculty</Link>),\r\n    },\r\n    {\r\n      key: \"/management/course\",\r\n      icon: React.createElement(OrderedListOutlined),\r\n      label: (<Link to=\"/management/course\">Courses</Link>),\r\n    },\r\n    {\r\n      key: \"/management/profile\",\r\n      icon: React.createElement(IdcardOutlined),\r\n      label: (<Link to=\"/management/profile\">Profile</Link>),\r\n    },\r\n    {\r\n      key: \"/management/announcement/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/management/announcement/view\">Announcements</Link>),\r\n    },\r\n    {\r\n      key: \"message\",\r\n      icon: React.createElement(MessageOutlined),\r\n      label: (<Link to=\"/management/message/view\">Messages</Link>),\r\n    },\r\n    {\r\n      key: \"/management/post/new\",\r\n      icon: React.createElement(PlusOutlined),\r\n      label: (<Link to=\"/management/post/new\">Post</Link>),\r\n    },\r\n    {\r\n      key: \"/management/policy/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/management/policy/view\">Policy</Link>),\r\n    },\r\n    {\r\n      key: \"/management/evaluate\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/management/evaluate\">Evaluate</Link>),\r\n    },\r\n    {\r\n      key: \"Logout\",\r\n      icon: React.createElement(LogoutOutlined),\r\n      label: (<Link onClick={logout}>Logout</Link>),\r\n    },\r\n  \r\n  ]\r\n  const items = [\r\n    {\r\n      key: '2',\r\n      label: (\r\n        <Link to='/management/profile'>\r\n          Profile\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      key: '1',\r\n      label: (\r\n        <a href='#' onClick={() => logout()}>\r\n          Logout\r\n        </a>\r\n      ),\r\n    },\r\n  ]\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorPrimary: '#006494',\r\n          borderRadius: 2,\r\n          colorBgContainer: '#E8F1F2',\r\n        },\r\n        \r\n      }}\r\n    >\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          theme={(dark ? \"dark\": \"light\")}\r\n          collapsedWidth=\"0\"\r\n          style={{ height: '100vh', background: '#13293D'}}\r\n        >\r\n          <div className=\"demo-logo-vertical\">\r\n            <Image src='/upesfull.png'/>\r\n          </div>\r\n          <Menu\r\n            theme={(dark ? \"dark\": \"light\")}\r\n            mode=\"inline\"\r\n            style={{background: '#13293D', fontSize: '16px'}}\r\n            defaultSelectedKeys={location.pathname}\r\n            defaultOpenKeys={[]}\r\n            items={menuItem}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Dropdown menu={{ items, }} placement='bottom'>\r\n              <Avatar size=\"large\" style={{ float: 'right', margin: '10px'}} icon={<UserOutlined />} />\r\n            </Dropdown>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: '24px 16px 0',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: 24,\r\n                minHeight: 360,\r\n              }}\r\n            >\r\n              { props.children }\r\n            </div>\r\n          </Content>\r\n          <Footer\r\n            style={{\r\n              textAlign: 'center',\r\n\r\n            }}\r\n          >\r\n            Debugged By Students \r\n          </Footer>\r\n        </Layout>\r\n        {/* <FloatButton icon={(dark ? <BulbFilled /> : <BulbOutlined />)} onClick={() => mode()} /> */}\r\n      </Layout>\r\n    </ConfigProvider>\r\n  )\r\n}\r\nexport default ManagementBase","import api from '../../config.json'\r\nimport { getToken } from '../Authentication/index'\r\n\r\n\r\nconst URL = api.evaluate\r\n\r\nexport const getResults = (body) => {\r\n  return fetch(`${URL}/result`, {\r\n    headers: {\r\n      'Accept': \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': `Bearer ${getToken()[2]}`,\r\n    },\r\n    credentials: \"include\",\r\n    method: \"POST\",  \r\n    body: JSON.stringify(body),\r\n  })\r\n    .then((res) => res.blob())\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\nexport const newResult = (body) => {\r\n  return fetch(`${URL}/submit`, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${getToken()[2]}`,\r\n      },\r\n      credentials: \"include\",\r\n      method: \"POST\",  \r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((error) => console.log(error));\r\n\r\n}\r\nexport const getResult = (body) => {\r\n  return fetch(`${URL}/getresult`, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${getToken()[2]}`,\r\n      },\r\n      credentials: \"include\",\r\n      method: \"POST\",  \r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((error) => console.log(error));\r\n\r\n}\r\n\r\nexport const getOne = (params) => {\r\n    return fetch(`${URL}/${params.courseId}`, {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"GET\",  \r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const getAll = (type) => {\r\n\r\n    return fetch(`${URL}/all` + (type === 'management' ? '?all=true' : ''), {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${getToken()[2]}`,\r\n        },\r\n        credentials: \"include\",\r\n        method: \"GET\",  \r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n}\r\n\r\nexport const getNotEvaluated = () => {\r\n  return fetch(`${URL}/notevaluated`, {\r\n    headers: {\r\n      'Accept': \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': `Bearer ${getToken()[2]}`,\r\n    },\r\n    credentials: \"include\",\r\n    method: \"GET\",  \r\n  })\r\n    .then((res) => res.json())\r\n    .catch((error) => console.log(error));\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport PageTitle from \"../../Components/Basic/PageTitle\"\r\nimport { Form, Select, Space, Spin, Input, notification, Button, Table, Tabs, Col, InputNumber, Row } from \"antd\"\r\nimport { getAll, getNotEvaluated, getResult, newResult } from \"../../Helper/Evaluate/index.js\"\r\nimport ManagementBase from \"../../Components/Management/Base.js\"\r\n\r\n\r\nconst ManagementEvaluate = () => {\r\n\r\n    const [internalAssessmentPercentage, setInternalAssessmentPercentage] = useState(30)\r\n    const [midsemPercentage, setMidsemPercentage] = useState(20)\r\n    const [endsemPercentage, setEndsemPercentage] = useState(50)\r\n    const [data, setData] = useState([])\r\n    const [evaData, setEvaData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [select, setSelect] = useState(\"Select\")\r\n    const [file, setFile] = useState(null)\r\n    const [resultSelect, setResultSelect] = useState(null)\r\n    const [options, setOptions] = useState([])\r\n    const [result, setResult] = useState(null)\r\n    const [api, contextHolder] = notification.useNotification()\r\n    const [gradingPoints, setGradingPoints] = useState([\r\n      { grade: \"O\", min: 85, max: 100, defaultValue: 0 },\r\n      { grade: \"A+\", min: 75, max: 84, defaultValue: 1 },\r\n      { grade: \"A\", min: 65, max: 74, defaultValue: 2 },\r\n      { grade: \"B+\", min: 55, max: 64, defaultValue: 3 },\r\n      { grade: \"B\", min: 45, max: 54, defaultValue: 4 },\r\n      { grade: \"C\", min: 40, max: 44, defaultValue: 5 },\r\n      { grade: \"F\", min: 0, max: 39, defaultValue: 6 },\r\n    ])\r\n    const [faculty, setFaculty] = useState(null)\r\n  \r\n    const openNotification = ({ type, message }) => {\r\n      api[type]({\r\n        message: message,\r\n      })\r\n    }\r\n    const dataSource = []\r\n    useEffect(() => {\r\n        document.title = \"Evaluate | SoCIS\"\r\n        getAll('management')\r\n          .then((res) => {\r\n              let array = []\r\n              res.map((item) => {\r\n                array.push({\r\n                  name: item.evaluator.firstName + ' ' + item.evaluator.lastName,\r\n                  email: item.evaluator.email,\r\n                  batchName: `${item.programName} ${item.batchName} SEM: ${item.semester}`,\r\n                  subjectName: `${item.subjectName} (${item.subjectCode})`,\r\n                  reportingManager: `${(item.evaluator.reportingManager ? item.evaluator.reportingManager.email : 'No Reporting Manager')}`\r\n                })\r\n              })\r\n              setEvaData(array)\r\n          })\r\n          .catch((error) => {\r\n            return openNotification({ type: 'error', message: 'Error Occurred!'})\r\n          })\r\n        getAll('faculty')\r\n            .then((res) => {\r\n                if(res.error)\r\n                    return openNotification({ type: 'error', message: 'Error Occurred!'})\r\n\r\n                if(res.length === 0)\r\n                    return openNotification({ type: 'info', message: 'No Evaluations Found!'})\r\n                setData(res)\r\n                \r\n                let array = []\r\n                res.map((item) => {\r\n                    array.push({ value: `${item._id}`, label: `${item.programName}-${item.semester}-${item.batchName} Subject:${item.subjectName} (${item.subjectCode}) Result Status: ${(item.uploaded) ? 'OK' : 'Not OK'}`})\r\n                })\r\n                setOptions(array)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                return openNotification({ type: 'error', message: 'Error Occurred!'})\r\n            })\r\n          \r\n    }, [setData, setOptions, setResultSelect, setFile, setResult, setFaculty])\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Roll Number',\r\n          dataIndex: 'rollnumber',\r\n          key: 'rollnumber',\r\n        },\r\n        {\r\n          title: 'SAPID',\r\n          dataIndex: 'sapId',\r\n          key: 'sapId',\r\n        },\r\n        {\r\n            title: 'Internal Marks',\r\n            dataIndex: 'internal',\r\n            key: 'intermal',\r\n        },\r\n        {\r\n            title: 'Mid Sem Marks',\r\n            dataIndex: 'midsem',\r\n            key: 'midsem',\r\n        },\r\n        {\r\n            title: 'End Sem Marks',\r\n            dataIndex: 'endsem',\r\n            key: 'endsem',\r\n        },\r\n        {\r\n          title: \"Final Marks\",\r\n          dataIndex: \"finalmarks\",\r\n          key: \"finalmarks\"\r\n        },\r\n        {\r\n          title: \"Grade\",\r\n          dataIndex: \"grade\",\r\n          dataIndex: \"grade\"\r\n        }\r\n    ]\r\n\r\n    const columns2 = [\r\n        {\r\n          title: 'Faculty Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Batch Name',\r\n          dataIndex: 'batchName',\r\n          key: 'batchName',\r\n        },\r\n        {\r\n          title: 'Course Name',\r\n          dataIndex: 'subjectName',\r\n          key: 'subjectName',\r\n        },\r\n        {\r\n            title: 'Faculty Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Cluster Head Email',\r\n            dataIndex: 'reportingManager',\r\n            key: 'reportingManager',\r\n        },\r\n        {\r\n            title: 'Send Email',\r\n            dataIndex: 'send',\r\n            key: 'send',\r\n            render: (text, record) => (\r\n                <Button type=\"primary\" onClick={() => handleSend(record)}>Send</Button>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    const handleSend = (record) => {\r\n        // Handle send button click event\r\n        console.log(\"Send button clicked for record:\", record);\r\n    }\r\n    const handleGradingPointChange = (index, key, value) => {\r\n      const updatedGradingPoints = [...gradingPoints]\r\n      updatedGradingPoints[index][key] = value\r\n      setGradingPoints(updatedGradingPoints)\r\n    }\r\n  \r\n    const handleInternalAssessmentChange = (value) => {\r\n      if (value + midsemPercentage + endsemPercentage <= 100) {\r\n        setInternalAssessmentPercentage(value)\r\n      } else {\r\n        openNotification({\r\n          type: \"warning\",\r\n          message: \"Total percentage exceeds 100\",\r\n        })\r\n      }\r\n    }\r\n  \r\n    const handleMidsemChange = (value) => {\r\n      if (internalAssessmentPercentage + value + endsemPercentage <= 100) {\r\n        setMidsemPercentage(value)\r\n      } else {\r\n        openNotification({\r\n          type: \"warning\",\r\n          message: \"Total percentage exceeds 100\",\r\n        })\r\n      }\r\n    }\r\n  \r\n    const handleEndsemChange = (value) => {\r\n      if (internalAssessmentPercentage + midsemPercentage + value <= 100) {\r\n        setEndsemPercentage(value)\r\n      } else {\r\n        openNotification({\r\n          type: \"warning\",\r\n          message: \"Total percentage exceeds 100\",\r\n        })\r\n      }\r\n    }\r\n\r\n    const onSelectChange = (e) => {\r\n        setResult(null)\r\n        setResultSelect(null)\r\n        let obj = data.find(o => o._id === e)\r\n        if(obj.uploaded) {\r\n            getResult({ evaluationId: e })\r\n                .then((data) => {\r\n                    data.map((item) => {\r\n                        dataSource.push({\r\n                            key: item._id,\r\n                            name: item.name,\r\n                            rollnumber: item.rollNumber,\r\n                            sapId: item.sapId,\r\n                            internal: item.grades[0].internalMarks,\r\n                            midsem: item.grades[0].midSemMarks,\r\n                            endsem: item.grades[0].endSemMarks,\r\n                            grade: item.grades[0].grade,\r\n                            finalmarks: item.grades[0].finalMarks\r\n                          })\r\n                    })\r\n                    setResult(dataSource)\r\n                })\r\n                .catch((err) => {\r\n                    return openNotification({ type: 'error', message: \"An Error Occurred!\"})\r\n                })\r\n        }else {\r\n            setResultSelect(e)\r\n        }\r\n    }\r\n\r\n    const submitResult = (e) => {\r\n        e.preventDefault()\r\n        if(file === null) {\r\n            return openNotification({ type: 'warning', message: 'Please Select A File First'})\r\n        }\r\n\r\n        let obj = data.find(o => o._id === resultSelect)\r\n        newResult({\r\n          file: file,\r\n          value: resultSelect,\r\n          subjectName: obj.subjectName,\r\n          subjectCode: obj.subjectCode,\r\n          semester: obj.semester,\r\n          parameters: {\r\n            grade: gradingPoints,\r\n            internalAssessmentPercentage: internalAssessmentPercentage,\r\n            midsemPercentage: midsemPercentage,\r\n            endsemPercentage: endsemPercentage\r\n          }\r\n        }) \r\n          .then((res) => {\r\n                openNotification({ type: 'success', message: 'Result Uploaded! You Would Be Refreshed!'})\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 3000)\r\n            })\r\n            .catch((err) => {\r\n                return openNotification({ type: 'error', message: 'Error Occurred!'})\r\n            })\r\n\r\n    }\r\n\r\n    const fileChange = (e) => {\r\n        const f = e.target.files[0]\r\n        let name = f.name.split('.')\r\n        if(name[1] !== 'xlsx') {\r\n            setTimeout(() => {\r\n                window.location.reload()\r\n            }, 2000)\r\n            return openNotification({ type: 'warning', message: 'Only .XLSX File Are Allowed'})\r\n        }\r\n        var reader = new FileReader()\r\n        reader.readAsDataURL(f)\r\n        reader.onload = () => {\r\n            setFile(reader.result)\r\n        }\r\n    }   \r\n\r\n    const tabs = [\r\n      {\r\n        key: '1',\r\n        label: 'Evaluate',\r\n        children: (\r\n          <div>\r\n            {loading ? (\r\n              <Spin />\r\n            ) : (\r\n              <Form onSubmitCapture={() => null}>\r\n                <Form.Item\r\n                  style={{\r\n                    width: \"100%\",\r\n                  }}\r\n                  required={true}\r\n                  label=\"Select The Batch And Course:\"\r\n                >\r\n                  <Select\r\n                    defaultValue={select}\r\n                    options={options}\r\n                    onChange={onSelectChange}\r\n                    showSearch\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Form>\r\n            )}\r\n            {!result ? (\r\n              \"\"\r\n            ) : (\r\n              <div>\r\n                <Table\r\n                  loading={!result ? true : false}\r\n                  dataSource={result}\r\n                  columns={columns}\r\n                />\r\n              </div>\r\n            )}\r\n            {!resultSelect ? (\r\n              \"\"\r\n            ) : (\r\n                <Form onSubmit={submitResult}>\r\n                  <Form.Item label=\"Drag and Drop .XLSX File\">\r\n                    <Input\r\n                      style={{ height: \"200px\" }}\r\n                      type=\"file\"\r\n                      onChangeCapture={fileChange}\r\n                      onChange={fileChange}\r\n                      placeholder=\"Drag and drop files or click\"\r\n                    />\r\n                  </Form.Item>\r\n                  {/* Create a form with dropdown to choose the grading system 1)grading ratio between midsem, endsem and internal assesment. 2)grading points */}\r\n\r\n                  <Form.Item label=\"Grading System\">\r\n                    <div>Assessment Ratio:</div>\r\n                    <Row gutter={16}>\r\n                      <Col span={8}>\r\n                        <Form.Item label=\"Internal Assessment (%):\">\r\n                          <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            defaultValue={internalAssessmentPercentage}\r\n                            onChange={handleInternalAssessmentChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item label=\"Midsem (%):\">\r\n                          <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            defaultValue={midsemPercentage}\r\n                            onChange={handleMidsemChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Form.Item label=\"Endsem (%):\">\r\n                          <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            defaultValue={endsemPercentage}\r\n                            onChange={handleEndsemChange}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <div>Grading Points:</div>\r\n                    {gradingPoints.map((item, index) => (\r\n                      <Row\r\n                        key={index}\r\n                        style={{\r\n                          display: \"flex\",\r\n                        }}\r\n                      >\r\n                        <Col span={8} style={{ width: \"100%\" }}>\r\n                          <span>{item.grade}:</span>\r\n                        </Col>\r\n                        <Col span={8} style={{ paddingLeft: \"10px\", paddingRight: \"5px\" }}>\r\n                          <span>Min Limit:</span>\r\n                          <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            defaultValue={item.min}\r\n                            onChange={(value) =>\r\n                              handleGradingPointChange(index, \"min\", value)\r\n                            }\r\n                          />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <span>Max Limit:</span>\r\n                          <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            defaultValue={item.max}\r\n                            onChange={(value) =>\r\n                              handleGradingPointChange(index, \"max\", value)\r\n                            }\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    ))}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button htmlType=\"submit\" type=\"primary\" onClick={submitResult} >\r\n                      Submit\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n            )}\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        key: '2',\r\n        label: 'See Pending Evaluations',\r\n        children: (\r\n          <div style={{ maxHeight: \"400px\" }}>\r\n            <h4>Faculty who have not generated award sheet</h4>{\" \"}\r\n            <Table\r\n              dataSource={evaData}\r\n              columns={columns2}\r\n              pagination={false}\r\n              scroll={{ y: 300 }}\r\n            />\r\n            {/* add button for send all */}\r\n          <div style={{padding:\"10px\", textAlign: \"right\"}}>\r\n              <Button type=\"primary\" style={{}}>\r\n                  Send All\r\n              </Button>\r\n          </div>\r\n        </div>\r\n        ),\r\n      },\r\n     \r\n    ]\r\n\r\n    return (\r\n      <ManagementBase>\r\n        {contextHolder}\r\n        <PageTitle title=\"Evaluation\" />\r\n        <Space />\r\n        <Tabs defaultActiveKey=\"2\" items={tabs} />\r\n       \r\n      </ManagementBase>\r\n    );\r\n}\r\n\r\nexport default ManagementEvaluate"],"names":["props","_jsx","Typography","Title","style","fontSize","children","title","MessageOutlined","ref","React","AntdIcon","_extends","icon","MessageOutlinedSvg","Header","Layout","Content","Footer","Sider","location","useLocation","useEffect","getAuthToken","user","role","window","href","_useState","useState","_useState2","_slicedToArray","dark","navigate","useNavigate","logout","signout","then","data","redirect","menuItem","key","DashboardOutlined","label","Link","to","ScheduleOutlined","UserOutlined","OrderedListOutlined","IdcardOutlined","FolderViewOutlined","PlusOutlined","LogoutOutlined","onClick","items","ConfigProvider","theme","token","colorPrimary","borderRadius","colorBgContainer","_jsxs","breakpoint","collapsedWidth","height","background","className","Image","src","Menu","mode","defaultSelectedKeys","pathname","defaultOpenKeys","padding","Dropdown","menu","placement","Avatar","size","float","margin","minHeight","textAlign","URL","api","getResults","body","fetch","concat","headers","getToken","credentials","method","JSON","stringify","res","blob","catch","error","console","log","newResult","json","getResult","getAll","type","internalAssessmentPercentage","setInternalAssessmentPercentage","_useState3","_useState4","midsemPercentage","setMidsemPercentage","_useState5","_useState6","endsemPercentage","setEndsemPercentage","_useState7","_useState8","setData","_useState9","_useState10","evaData","setEvaData","_useState11","_useState12","loading","setLoading","_useState13","_useState14","select","_useState15","_useState16","file","setFile","_useState17","_useState18","resultSelect","setResultSelect","_useState19","_useState20","options","setOptions","_useState21","_useState22","result","setResult","_notification$useNoti","notification","useNotification","_notification$useNoti2","contextHolder","_useState23","grade","min","max","defaultValue","_useState24","gradingPoints","setGradingPoints","_useState25","_useState26","setFaculty","openNotification","_ref","message","dataSource","document","array","map","item","push","name","evaluator","firstName","lastName","email","batchName","programName","semester","subjectName","subjectCode","reportingManager","length","value","_id","uploaded","columns","dataIndex","_defineProperty","columns2","render","text","record","Button","handleSend","handleGradingPointChange","index","updatedGradingPoints","_toConsumableArray","submitResult","e","preventDefault","obj","find","o","parameters","setTimeout","reload","err","fileChange","f","target","files","split","reader","FileReader","readAsDataURL","onload","tabs","Spin","Form","onSubmitCapture","Item","width","required","Select","onChange","evaluationId","rollnumber","rollNumber","sapId","internal","grades","internalMarks","midsem","midSemMarks","endsem","endSemMarks","finalmarks","finalMarks","showSearch","Table","onSubmit","Input","onChangeCapture","placeholder","Row","gutter","Col","span","InputNumber","display","paddingLeft","paddingRight","htmlType","maxHeight","pagination","scroll","y","ManagementBase","PageTitle","Space","Tabs","defaultActiveKey"],"sourceRoot":""}