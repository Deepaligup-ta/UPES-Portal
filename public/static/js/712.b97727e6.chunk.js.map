{"version":3,"file":"static/js/712.b97727e6.chunk.js","mappings":"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","sources":["Components/Faculty/Base.js","Components/Management/ProfileCard.js","Pages/Faculty/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, IdcardOutlined, ScheduleOutlined, AppstoreOutlined, PlusOutlined, FolderViewOutlined, LogoutOutlined, DashboardOutlined, OrderedListOutlined ,NotificationOutlined, MessageOutlined, FileTextOutlined, BulbOutlined, BulbFilled } from '@ant-design/icons'\r\nimport { Layout, Menu, Dropdown, Avatar, Image, ConfigProvider } from 'antd'\r\nimport { getAuthToken, signout } from '../../Helper/Authentication'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout\r\nconst FacultyBase = (props) => {\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    if(JSON.parse(localStorage.getItem('user')).changePassword)\r\n      return navigate('/')\r\n    let user = getAuthToken().user\r\n    if(user.role !== \"faculty\"){\r\n      return window.location.href = \"/\" \r\n    }\r\n   \r\n  }, [getAuthToken])\r\n  const [dark, setDark] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  const mode = () => {\r\n    if(dark)\r\n      setDark(false)\r\n    else  \r\n      setDark(true)\r\n  }\r\n\r\n  const logout = () => {\r\n    signout()\r\n      .then((data) => {\r\n        if(data.redirect)\r\n          return navigate('/?logout=true')      \r\n      })\r\n  }\r\n  \r\n  const items = [\r\n    {\r\n      key: '2',\r\n      label: (\r\n        <Link to='/faculty/profile'>\r\n          Profile\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      key: '1',\r\n      label: (\r\n        <a href='#' onClick={() => logout()}>\r\n          Logout\r\n        </a>\r\n      ),\r\n    },\r\n  ]\r\n  const menuItem = [\r\n    {\r\n      key: \"/faculty/dashboard\",\r\n      icon: React.createElement(DashboardOutlined),\r\n      label: (<Link to=\"/faculty/dashboard\">Dashboard</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/timetable\",\r\n      icon: React.createElement(ScheduleOutlined),\r\n      label: (<Link to=\"/faculty/timetable\">Timetable</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/announcement/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/faculty/announcement/view\">Announcement</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/course\",\r\n      icon: React.createElement(OrderedListOutlined),\r\n      label: (<Link to=\"/faculty/course\">Courses</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/profile\",\r\n      icon: React.createElement(IdcardOutlined),\r\n      label: (<Link to=\"/faculty/profile\">Profile</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/post/new\",\r\n      icon: React.createElement(PlusOutlined),\r\n      label: (<Link to=\"/faculty/post/new\">Post</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/message/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/faculty/message/view\">Message</Link>),\r\n    },\r\n    {\r\n      key: \"/faculty/policy/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/faculty/policy/view\">Policy</Link>),\r\n    },\r\n    {\r\n      key: \"Logout\",\r\n      icon: React.createElement(LogoutOutlined),\r\n      label: (<Link onClick={logout}>Logout</Link>),\r\n    },\r\n    // {\r\n    //   key: \"Courses\",\r\n    //   icon: React.createElement(UserOutlined),\r\n    //   label: `Courses`,\r\n    // },\r\n    ]\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorPrimary: '#006494',\r\n          borderRadius: 2,\r\n          colorBgContainer: '#E8F1F2',\r\n        },\r\n        \r\n      }}\r\n    >\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          theme={(dark ? \"dark\": \"light\")}\r\n          collapsedWidth=\"0\"\r\n          style={{ height: '100vh', background: '#13293D'}}\r\n        >\r\n          <div className=\"demo-logo-vertical\">\r\n            <Image src='/upesfull.png'/>\r\n          </div>\r\n          <Menu\r\n            theme={(dark ? \"dark\": \"light\")}\r\n            mode=\"inline\"\r\n            style={{background: '#13293D', fontSize: '16px'}}\r\n            defaultSelectedKeys={location.pathname}\r\n            defaultOpenKeys={[]}\r\n            items={menuItem}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Dropdown menu={{ items, }} placement='bottom'>\r\n              <Avatar size=\"large\" style={{ float: 'right', margin: '10px'}} icon={<UserOutlined />} />\r\n            </Dropdown>          \r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: '24px 16px 0',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: 24,\r\n                minHeight: 360,\r\n              }}\r\n            >\r\n              { props.children }\r\n            </div>\r\n          </Content>\r\n          <Footer\r\n            style={{\r\n              textAlign: 'center',\r\n\r\n            }}\r\n          >\r\n            Debugged By Students \r\n          </Footer>\r\n        </Layout>\r\n        {/* <FloatButton icon={(dark ? <BulbFilled /> : <BulbOutlined />)} onClick={() => mode()} /> */}\r\n      </Layout>\r\n    </ConfigProvider>\r\n  )\r\n}\r\nexport default FacultyBase","import { Card, Layout, QRCode, Col, Row, Button, Form, Input, Modal } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { changePasswordFlag, getAuthToken, getPicture, uploadPicture } from \"../../Helper/Authentication\"\r\n\r\nconst ProfileCard = (props) => {\r\n    const [pic, setPic] = useState(null)\r\n    const [newPic, setNewPic] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    useEffect(() => {\r\n        getPicture({ userId: props.data._id })\r\n            .then((data) => {\r\n                if(data.error)\r\n                    return setPic(false)\r\n                setPic(data.profilePic)\r\n            })\r\n    }, [setPic])\r\n    let reader = new FileReader()\r\n    const fileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        reader.onloadend = () => {\r\n            setNewPic(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const onFinish = () => {\r\n        setLoading(true)\r\n        uploadPicture({ profilePic: newPic })\r\n            .then((data) => {\r\n                if(data.error)\r\n                    alert(\"Error Uploading\")\r\n                setLoading(false)\r\n                setPic(newPic)\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                setPic(false)\r\n            })\r\n    }\r\n\r\n    const changePassword = () => {\r\n        changePasswordFlag()\r\n            .then(data => {\r\n                if(data.error)\r\n                    return alert(\"Can't Change The Flag!\")\r\n                console.log(data)\r\n                if(data.success){\r\n                    localStorage.setItem('user', JSON.stringify({ changePassword: true }))\r\n                    return window.location.href = ('/new-password')\r\n                }else {\r\n                    alert(\"Encountered An Error\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <Layout.Content>\r\n            <Row>\r\n                <Col flex={0.2}>\r\n                    <Card \r\n                        style={{ width: '240px', border: 'none' }}  \r\n                        hoverable \r\n                        cover={<img  src={`${(pic ? pic : '/profile.png')}`} />}\r\n                    >\r\n                    </Card>\r\n                </Col>\r\n                <Col flex={3}>\r\n                    <Card hoverable>\r\n                        <b>Name:</b> {props.data.firstName} {props.data.lastName}<br/>\r\n                        <b>SAPID:</b> {props.data.sapId}<br/>\r\n                        <b>Email:</b> <a href={`mailto:${props.data.email}`}>{props.data.email}</a><br/>\r\n                        <b>Designations:</b> {props.data.designations} <br/>\r\n                        {!props.data.reportingManager ? '' :\r\n                            <div>\r\n                                <b>Reporting Manager:</b> <br/>\r\n                                <b>Name:</b> {props.data.reportingManager.firstName} {props.data.reportingManager.lastName} <br/>\r\n                                <b>Email:</b> <Link to={`mailto:${props.data.reportingManager.email}`}> {props.data.reportingManager.email}</Link><br/>\r\n                            </div>\r\n                        }\r\n                        { props.data.sapId === getAuthToken().user.sapId ? \r\n                            <Form\r\n                                name=\"picture\"\r\n                                onFinish={onFinish}\r\n                                autoComplete=\"off\"\r\n                                style={{ width: '240px'}}\r\n                            >\r\n                                <Form.Item\r\n                                    style={{ padding: 0, margin: 0}}\r\n                                    label=\"Profile Picture\"\r\n                                    name=\"profilePic\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <Input onChange={fileChange} type=\"file\" />\r\n                                </Form.Item>\r\n                                { loading ? \"Uploading...\" : ''}\r\n                                <Button  type=\"primary\" htmlType=\"submit\">\r\n                                    {loading ? 'Uploading' : 'Upload'}\r\n                                </Button><br/>\r\n                            </Form>\r\n                            : \"\" }\r\n                        <br/>\r\n                        <Button style={{ visibility: (props.data.sapId !== getAuthToken().user.sapId ? 'hidden' : 'visible')}} type=\"primary\" onClick={() => changePassword()}>\r\n                                Change Password\r\n                        </Button>\r\n                        <QRCode \r\n                            value={JSON.stringify(props.data)}\r\n                            style={{ float: 'right'}}\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Layout.Content>\r\n    )\r\n}\r\n\r\nexport default ProfileCard","import React, { useEffect, useState } from \"react\"\r\nimport { Spin, notification } from \"antd\"\r\nimport ProfileCard from \"../../Components/Management/ProfileCard\"\r\nimport { getUser } from \"../../Helper/Authentication\"\r\nimport FacultyBase from \"../../Components/Faculty/Base\"\r\n\r\nconst FacultyProfile = () => {\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [api, context] = notification.useNotification()\r\n    const openNotification = ({ type, message }) => {\r\n        api[type]({\r\n            message: message\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getUser({ userId: false})\r\n            .then((data) => {\r\n                if(data.error)\r\n                    return openNotification({type: 'error', message: 'Error Occured!'})\r\n                setData(data)\r\n                setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n            return openNotification({type: 'error', message: 'Error Occured!'})\r\n        })\r\n        \r\n    }, [setData, setLoading, setError])\r\n    return(\r\n        <FacultyBase>\r\n            {context}\r\n            { loading ? <Spin /> : <ProfileCard data={data} /> }\r\n        </FacultyBase>\r\n    )\r\n}\r\n\r\nexport default FacultyProfile"],"names":["Header","Layout","Content","Footer","Sider","props","location","useLocation","useEffect","JSON","parse","localStorage","getItem","changePassword","navigate","getAuthToken","user","role","window","href","_useState","useState","_useState2","_slicedToArray","dark","useNavigate","logout","signout","then","data","redirect","items","key","label","_jsx","Link","to","children","onClick","menuItem","icon","React","DashboardOutlined","ScheduleOutlined","FolderViewOutlined","OrderedListOutlined","IdcardOutlined","PlusOutlined","LogoutOutlined","ConfigProvider","theme","token","colorPrimary","borderRadius","colorBgContainer","_jsxs","breakpoint","collapsedWidth","style","height","background","className","Image","src","Menu","mode","fontSize","defaultSelectedKeys","pathname","defaultOpenKeys","padding","Dropdown","menu","placement","Avatar","size","float","margin","UserOutlined","minHeight","textAlign","pic","setPic","_useState3","_useState4","newPic","setNewPic","_useState5","_useState6","loading","setLoading","getPicture","userId","_id","error","profilePic","reader","FileReader","Row","Col","flex","Card","width","border","hoverable","cover","concat","firstName","lastName","sapId","email","designations","reportingManager","Form","name","onFinish","uploadPicture","alert","catch","autoComplete","Item","rules","required","message","Input","onChange","e","file","target","files","onloadend","result","readAsDataURL","type","Button","htmlType","visibility","changePasswordFlag","console","log","success","setItem","stringify","QRCode","value","setData","setError","_notification$useNoti","notification","useNotification","_notification$useNoti2","api","context","openNotification","_ref","getUser","FacultyBase","Spin","ProfileCard"],"sourceRoot":""}