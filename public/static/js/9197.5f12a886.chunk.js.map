{"version":3,"file":"static/js/9197.5f12a886.chunk.js","mappings":"gPAyFA,UA/E8B,WAC1B,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAuBT,EAAAA,EAAAA,UAAS,CAAC,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA6BC,EAAAA,EAAaC,kBAAiBC,GAAAd,EAAAA,EAAAA,GAAAW,EAAA,GAApDI,EAAGD,EAAA,GAAEE,EAAaF,EAAA,GAEnBG,EAAmB,SAAHC,GAA2B,IAArBC,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAChCL,EAAII,GAAM,CACRC,QAASA,GAEb,EAKMC,EAJW,WACb,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,OAAOE,EAAAA,SAAc,kBAAM,IAAIC,gBAAgBH,EAAO,GAAE,CAACA,GAC7D,CACcI,IACdC,EAAAA,EAAAA,YAAU,WACNC,SAASC,MAAQ,wBAEjB,IAAIC,EAAUT,EAAMU,IAAI,WAET,QAAZD,EACCb,EAAiB,CAAEE,KAAM,UAAWC,QAAS,4BAC7B,SAAZU,EACJb,EAAiB,CAAEE,KAAM,UAAWC,QAAS,0BAC7B,WAAZU,GACJb,EAAiB,CAAEE,KAAM,UAAWC,QAAS,2BAEjDY,EAAAA,EAAAA,IAAiB,GACZC,MAAK,SAACC,GAEH,OAAGA,EAAIC,MACIlB,EAAiB,CAAEE,KAAM,QAASC,QAAS,oBAE/B,IAApBc,EAAIE,KAAKC,OACDpB,EAAiB,CAAEE,KAAM,OAAQC,QAAS,6BAErDV,EAAQwB,GACRhC,EAAQgC,EAAIE,WACZ9B,GAAW,GACf,IACCgC,OAAM,SAACH,GACJI,QAAQC,IAAIL,EAChB,GACR,GAAG,CAACjC,EAASQ,EAASW,IAiBtB,OACIoB,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CAAAC,SAAA,CACd3B,GACG4B,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAChB,MAAM,mBACjBe,EAAAA,EAAAA,KAACE,EAAAA,EAAK,IACJzC,GAAUuC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,KAAMH,EAAAA,EAAAA,KAACI,EAAAA,EAAgB,CAAC/C,KAAMA,KACrD2C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACPC,QAASzC,EAAK0C,KACdC,SAAU,EACVC,SAAU,SAACF,GAAI,OAzBR,SAACA,GAEhB7C,GAAW,IAEX0B,EAAAA,EAAAA,IAAiBmB,GACZlB,MAAK,SAACC,GACHxB,EAAQwB,GACRhC,EAAQgC,EAAIE,MACZ9B,GAAW,EACf,IACCgC,OAAM,SAACH,GACJI,QAAQC,IAAIL,EAChB,GACR,CAYgCmB,CAAWH,EAAK,EACpCI,MAAO9C,EAAK+C,WACZC,MAAO,CAAEC,UAAW,cAIpC,C","sources":["Pages/Management/Announcement.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport ManagementBase from \"../../Components/Management/Base\"\r\nimport PageTitle from \"../../Components/Basic/PageTitle\"\r\nimport { Pagination, Space, notification } from \"antd\"\r\nimport { getAnnouncements } from \"../../Helper/Announcement/index.js\"\r\nimport AnnouncementCard from \"../../Components/Basic/AnnouncementCard\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport CardLoader from \"../../Components/Basic/CardLoader\"\r\n\r\n\r\nconst MangementAnnouncement = () => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [info, setInfo]= useState({})\r\n    const [api, contextHolder] = notification.useNotification()\r\n\r\n    const openNotification = ({ type, message }) => {\r\n      api[type]({\r\n        message: message,\r\n      })\r\n    }\r\n    const useQuery = () => {\r\n        const { search } = useLocation()\r\n        return React.useMemo(() => new URLSearchParams(search), [search])\r\n    }\r\n    const query = useQuery()\r\n    useEffect(() => {\r\n        document.title = \"Announcements | SoCIS\"\r\n\r\n        let success = query.get('success')\r\n\r\n        if(success === \"new\") \r\n            openNotification({ type: \"success\", message: \"Added New Announcement!\" })\r\n        else if(success === \"edit\")\r\n            openNotification({ type: \"success\", message: \"Updated Announcement!\" })\r\n        else if(success === \"delete\")\r\n            openNotification({ type: \"success\", message: \"Deleted Announcement!\" })\r\n\r\n        getAnnouncements(1)\r\n            .then((res) => {\r\n\r\n                if(res.error)\r\n                    return openNotification({ type: 'error', message: 'Error Occurred!'})\r\n\r\n                if(res.docs.length === 0)\r\n                    return openNotification({ type: 'info', message: 'No Announcements Found!'})\r\n\r\n                setInfo(res)\r\n                setData(res.docs)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [setData, setInfo, query])\r\n    \r\n    const changePage = (page) => {\r\n\r\n        setLoading(true)\r\n        \r\n        getAnnouncements(page)\r\n            .then((res) => {\r\n                setInfo(res)\r\n                setData(res.docs)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    \r\n    return(\r\n        <ManagementBase>\r\n        {contextHolder}\r\n            <PageTitle title=\"Announcements\" />\r\n            <Space />\r\n            { loading ? <CardLoader /> : <AnnouncementCard data={data} /> }\r\n            <br />\r\n            <Pagination \r\n                current={info.page} \r\n                pageSize={1}\r\n                onChange={(page) => changePage(page)}\r\n                total={info.totalPages}\r\n                style={{ alignSelf: 'center'}}\r\n            />\r\n        </ManagementBase>\r\n    )\r\n}\r\n\r\nexport default MangementAnnouncement"],"names":["_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","info","setInfo","_notification$useNoti","notification","useNotification","_notification$useNoti2","api","contextHolder","openNotification","_ref","type","message","query","search","useLocation","React","URLSearchParams","useQuery","useEffect","document","title","success","get","getAnnouncements","then","res","error","docs","length","catch","console","log","_jsxs","ManagementBase","children","_jsx","PageTitle","Space","CardLoader","AnnouncementCard","Pagination","current","page","pageSize","onChange","changePage","total","totalPages","style","alignSelf"],"sourceRoot":""}