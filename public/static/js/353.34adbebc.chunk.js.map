{"version":3,"file":"static/js/353.34adbebc.chunk.js","mappings":"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","sources":["Components/Basic/PageTitle.js","Components/Management/Base.js","Components/Basic/Table.js","Pages/Management/Faculty.js"],"sourcesContent":["import { Typography } from \"antd\"\r\nimport React from \"react\"\r\n\r\n\r\nconst PageTitle = (props) => {\r\n    return(\r\n        <Typography.Title style={{ fontSize: '24px'}}>\r\n            {props.title}\r\n        </Typography.Title>\r\n    )\r\n}\r\n\r\nexport default PageTitle","import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, IdcardOutlined, ScheduleOutlined, AppstoreOutlined, PlusOutlined, FolderViewOutlined, LogoutOutlined, DashboardOutlined, OrderedListOutlined ,NotificationOutlined, MessageOutlined, FileTextOutlined, BulbOutlined, BulbFilled } from '@ant-design/icons'\r\nimport { Layout, Menu, ConfigProvider, Avatar, Image, Dropdown } from 'antd'\r\nimport { getAuthToken, signout } from '../../Helper/Authentication'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout\r\nconst ManagementBase = (props) => {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if(JSON.parse(localStorage.getItem('user')).changePassword)\r\n      return navigate('/')\r\n    let user = getAuthToken().user\r\n    if(user.role !== \"management\"){\r\n      return window.location.href = \"/\" \r\n    }\r\n   \r\n  }, [getAuthToken])\r\n  const [dark, setDark] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  const mode = () => {\r\n    if(dark)\r\n      setDark(false)\r\n    else  \r\n      setDark(true)\r\n  }\r\n  const logout = () => {\r\n    signout()\r\n      .then((data) => {\r\n        if(data.redirect)\r\n          return navigate('/?logout=true')\r\n      })\r\n  }\r\n  const menuItem = [\r\n    {\r\n      key: \"/management/dashboard\",\r\n      icon: React.createElement(DashboardOutlined),\r\n      label: (<Link to=\"/management/dashboard\">Dashboard</Link>),\r\n    },\r\n    {\r\n      key: \"/management/timetable\",\r\n      icon: React.createElement(ScheduleOutlined),\r\n      label: (<Link to=\"/management/timetable\">Timetable</Link>),\r\n    },\r\n    {\r\n      key: \"/management/faculty\",\r\n      icon: React.createElement(UserOutlined),\r\n      label: (<Link to=\"/management/faculty\">Faculty</Link>),\r\n    },\r\n    {\r\n      key: \"/management/course\",\r\n      icon: React.createElement(OrderedListOutlined),\r\n      label: (<Link to=\"/management/course\">Courses</Link>),\r\n    },\r\n    {\r\n      key: \"/management/profile\",\r\n      icon: React.createElement(IdcardOutlined),\r\n      label: (<Link to=\"/management/profile\">Profile</Link>),\r\n    },\r\n    {\r\n      key: \"/management/announcement/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/management/announcement/view\">Announcements</Link>),\r\n    },\r\n    {\r\n      key: \"message\",\r\n      icon: React.createElement(MessageOutlined),\r\n      label: (<Link to=\"/management/message/view\">Messages</Link>),\r\n    },\r\n    {\r\n      key: \"/management/post/new\",\r\n      icon: React.createElement(PlusOutlined),\r\n      label: (<Link to=\"/management/post/new\">Post</Link>),\r\n    },\r\n    {\r\n      key: \"/management/policy/view\",\r\n      icon: React.createElement(FolderViewOutlined),\r\n      label: (<Link to=\"/management/policy/view\">Policy</Link>),\r\n    },\r\n    {\r\n      key: \"Logout\",\r\n      icon: React.createElement(LogoutOutlined),\r\n      label: (<Link onClick={logout}>Logout</Link>),\r\n    },\r\n  \r\n  ]\r\n  const items = [\r\n    {\r\n      key: '2',\r\n      label: (\r\n        <Link to='/management/profile'>\r\n          Profile\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      key: '1',\r\n      label: (\r\n        <a href='#' onClick={() => logout()}>\r\n          Logout\r\n        </a>\r\n      ),\r\n    },\r\n  ]\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorPrimary: '#006494',\r\n          borderRadius: 2,\r\n          colorBgContainer: '#E8F1F2',\r\n        },\r\n        \r\n      }}\r\n    >\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          theme={(dark ? \"dark\": \"light\")}\r\n          collapsedWidth=\"0\"\r\n          style={{ height: '100vh', background: '#13293D'}}\r\n        >\r\n          <div className=\"demo-logo-vertical\">\r\n            <Image src='/upesfull.png'/>\r\n          </div>\r\n          <Menu\r\n            theme={(dark ? \"dark\": \"light\")}\r\n            mode=\"inline\"\r\n            style={{background: '#13293D', fontSize: '16px'}}\r\n            defaultSelectedKeys={location.pathname}\r\n            defaultOpenKeys={[]}\r\n            items={menuItem}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Dropdown menu={{ items, }} placement='bottom'>\r\n              <Avatar size=\"large\" style={{ float: 'right', margin: '10px'}} icon={<UserOutlined />} />\r\n            </Dropdown>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: '24px 16px 0',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: 24,\r\n                minHeight: 360,\r\n              }}\r\n            >\r\n              { props.children }\r\n            </div>\r\n          </Content>\r\n          <Footer\r\n            style={{\r\n              textAlign: 'center',\r\n\r\n            }}\r\n          >\r\n            Debugged By Students \r\n          </Footer>\r\n        </Layout>\r\n        {/* <FloatButton icon={(dark ? <BulbFilled /> : <BulbOutlined />)} onClick={() => mode()} /> */}\r\n      </Layout>\r\n    </ConfigProvider>\r\n  )\r\n}\r\nexport default ManagementBase","import { Table } from \"antd\"\r\nimport React from \"react\"\r\n\r\nconst TableCard = (props) => {\r\n    return(\r\n        <Table \r\n            loading={props.loading}\r\n            columns={props.columns}\r\n            dataSource={props.data}\r\n            pagination={false}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TableCard","import React, { useEffect, useState } from \"react\"\r\nimport ManagementBase from \"../../Components/Management/Base\"\r\nimport PageTitle from \"../../Components/Basic/PageTitle\"\r\nimport { Pagination, Space, notification } from \"antd\"\r\nimport { Link } from 'react-router-dom'\r\nimport { useLocation } from \"react-router-dom\"\r\nimport TableCard from \"../../Components/Basic/Table\"\r\nimport { getUsers } from \"../../Helper/Authentication\"\r\n\r\n\r\nconst Faculty = () => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [info, setInfo]= useState({})\r\n    const [api, contextHolder] = notification.useNotification()\r\n\r\n    const openNotification = ({ type, message }) => {\r\n      api[type]({\r\n        message: message,\r\n      })\r\n    }\r\n    const useQuery = () => {\r\n        const { search } = useLocation()\r\n        return React.useMemo(() => new URLSearchParams(search), [search])\r\n    }\r\n    const query = useQuery()\r\n    useEffect(() => {\r\n        document.title = \"Faculty | SoCIS\"\r\n        getUsers({ page: 1 })\r\n            .then((res) => {\r\n                if(res.error)\r\n                    return openNotification({type: 'error', message: 'Error Occurred!'})\r\n                setInfo(res)\r\n                setData(res.docs)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                return openNotification({type: 'error', message: 'Error Occurred!'})\r\n            })\r\n    }, [setData, setInfo, query])\r\n    \r\n    const changePage = (page) => {\r\n        setLoading(true)\r\n        getUsers({page: page})\r\n            .then((res) => {\r\n                if(res.error)\r\n                    return openNotification({type: 'error', message: 'Error Occurred!'})\r\n                setInfo(res)\r\n                setData(res.docs)\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                return openNotification({type: 'error', message: 'Error Occurred!'})\r\n            })\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'SAP ID',\r\n            dataIndex: 'sapId',\r\n            key: 'sapId',\r\n        },\r\n        {\r\n            title: 'First Name',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Reporting Manager Name',\r\n            dataIndex: ['reportingManager','firstName'],\r\n            key: 'reportingManger.firstName',\r\n        },\r\n        {\r\n            title: 'Reporting Manager SAPID',\r\n            dataIndex: ['reportingManager','sapId'],\r\n            key: 'reportingManger.firstName',\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n            render: (text) => <div><Link to={`${text}`}>Profile</Link> | <Link key={text} to={`/management/timetable?userId=${text}`}>Timetable</Link></div>\r\n        }\r\n    ]\r\n    return(\r\n        <ManagementBase>\r\n        {contextHolder}\r\n            <PageTitle title=\"Faculty\" />\r\n            <Space />\r\n            {/* { loading ? <Spin style={{ textAlign: 'center', justifyContent: 'center'}} /> : <TableCard loading={loading} columns={columns} data={data} /> } */}\r\n            <TableCard loading={loading} columns={columns} data={data} />\r\n            <br />\r\n            <Pagination \r\n                current={info.page} \r\n                pageSize={1}\r\n                onChange={(page) => changePage(page)}\r\n                total={info.totalPages}\r\n                style={{ alignSelf: 'center'}}\r\n            />\r\n        </ManagementBase>\r\n    )\r\n}\r\n\r\nexport default Faculty"],"names":["props","_jsx","Typography","Title","style","fontSize","children","title","Header","Layout","Content","Footer","Sider","location","useLocation","useEffect","JSON","parse","localStorage","getItem","changePassword","navigate","getAuthToken","user","role","window","href","_useState","useState","_useState2","_slicedToArray","dark","useNavigate","logout","signout","then","data","redirect","menuItem","key","icon","React","DashboardOutlined","label","Link","to","ScheduleOutlined","UserOutlined","OrderedListOutlined","IdcardOutlined","FolderViewOutlined","MessageOutlined","PlusOutlined","LogoutOutlined","onClick","items","ConfigProvider","theme","token","colorPrimary","borderRadius","colorBgContainer","_jsxs","breakpoint","collapsedWidth","height","background","className","Image","src","Menu","mode","defaultSelectedKeys","pathname","defaultOpenKeys","padding","Dropdown","menu","placement","Avatar","size","float","margin","minHeight","textAlign","Table","loading","columns","dataSource","pagination","setData","_useState3","_useState4","setLoading","_useState5","_useState6","info","setInfo","_notification$useNoti","notification","useNotification","_notification$useNoti2","api","contextHolder","openNotification","_ref","type","message","query","search","URLSearchParams","useQuery","document","getUsers","page","res","error","docs","catch","dataIndex","render","text","concat","ManagementBase","PageTitle","Space","TableCard","Pagination","current","pageSize","onChange","changePage","total","totalPages","alignSelf"],"sourceRoot":""}